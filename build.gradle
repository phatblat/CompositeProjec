/*
 * build.gradle
 */

plugins {
    id 'com.android.application' version "${agp_version}" apply false
    id 'com.android.library' version "${agp_version}" apply false
    id "org.jetbrains.kotlin.android" version "${kotlin_version}" apply false
    id "at.phatbl.shellexec" version "${shellexec_version}" apply false
}

subprojects {
    repositories {
        google()
        mavenCentral()
        jcenter() // Warning: this repository is going to shut down soon
    }
}

/*
 * tasks
 */

import at.phatbl.shellexec.ShellExec

// task fortune(type: ShellExec) {
tasks.register('fortune', ShellExec) {
    group = "zzz"
    description = "An example script task."
    command "fortune | cowsay | lolcat --force"
}

tasks.register('hello') {
    group = "zzz"
    description = "An example task."
    doLast { println 'hello world' }
}

abstract class GreetingTask extends DefaultTask {
    GreetingTask() {
        group = "zzz"
        description = "An example task class."
    }

    @TaskAction
    def greet() {
        println 'hello from GreetingTask'
    }
}

// Create a task using the task type
tasks.register('hello2') {
    doLast { println 'hello from GreetingTask' }
}

tasks.register('clonePlugin', ShellExec) {
    group = "zzz"
    description = "Clones the ShellExec plugin project into a sibling directory."
    command "git clone https://github.com/phatblat/ShellExec.git ../ShellExec"
}

tasks.register('cloneRetrofit', ShellExec) {
    group = "zzz"
    description = "Clones the Retrofit project into a sibling directory."
    command "git clone https://github.com/square/retrofit.git ../retrofit"
}
